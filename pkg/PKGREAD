# README files for repository. Do NOT remove this line.
##### PKGREADME: ccache
POSTINSTALL

  There are two ways to use ccache. You can either prefix your compilation
  commands with ccache or you can let ccache masquerade as the compiler by
  prepending /usr/lib/ccache to your $PATH environment variable. The first
  method is most convenient if you just want to try out ccache or wish to
  use it for some specific projects. The second method is most useful for
  when you wish to use ccache for all your compilations.

  You can also set CC and CXX like so,
  export CC='ccache gcc' ; export CXX='ccache g++' to /etc/pkgmk.conf
  But this method can break on some packages not expecting a space in
  CC or CXX.

  You might also want to change the ccache directory, using the CCACHE_DIR
  environement variable. (I personally use
  export CCACHE_DIR="/var/cache/ccache").

  You may also want to use distcc as a backend to ccache by setting
  export CCACHE_PREFIX="distcc"

  Also if you plan to use this same cache between different crux versions and
  compiler versions, you can do something like this
  export CCACHE_COMPILERCHECK="%compiler% -dumpversion; crux"
  to prevent cache errors.
##### PKGREADME: cups
README for cups 2.x.x

REQUIREMENTS

1. As of version 1.5 cups needs libusb to print to usb printers, the kernel
   modules usblp is no longer supported. 
   The port installs /etc/modprobe.de/cups.conf to blacklist the module.
2. In order to have more printer drivers available, the installation of the 
   gutenprint port (formerly gimp-print) is recommended. HP DeskJet/LaserJet 
   users should install the hpcups port.
3. Build and install in the following order:
   - cups
   - ghostscript
   - cups-filters
   - gutenprint (optionally)
   - hpcups (optionally)

Most common printers should be supported by the above configuration, if 
NOT you must generate a PPD file (Postscript Printer Description) for your 
printer:

1. Select your printer from http://www.linuxprinting.org/printer_list.cgi
2. Select a driver, be shure the driver is available within ghostscript.
   You can see all drivers included in ghostscript with a 'gs -h'.
3. Download the PPD file for your printer.
4. Save the PPD file to /usr/share/cups/model/<name>.
5. Restart cups with '/etc/rc.d/cups restart'


PRE-INSTALL

POST-INSTALL

1. Remove the usblp kernel module before starting cups.
2. Configure your printer with the web-interface, http://localhost:631.


PRECAUTION

##### PKGREADME: fcgiwrap
location / {
    fastcgi_pass   unix:/tmp/cgi.sock;
    fastcgi_param   SCRIPT_FILENAME /var/www/htdocs/cgit/cgit.cgi;
    fastcgi_param   PATH_INFO       $uri;
    fastcgi_param   QUERY_STRING    $args;
}
##### PKGREADME: glib-networking
For using the PKCS #11 modules, the GIO_USE_TLS variable should be set in the
environment. This can be added to the /etc/profile (as the root user):

    export GIO_USE_TLS=gnutls-pkcs11

##### PKGREADME: glm
Upstream decided to remove the cmake scripts for whatever reason.. you can
have a look at the discussion here:
https://github.com/g-truc/glm/issues/947
And check on the status for a new one here:
https://github.com/g-truc/glm/issues/961

This port uses the method the Arch Linux maintainer for glm decided to go.
Big thanks to Sven-Hendrik Haase from my side (see the first link for more details).
##### PKGREADME: gnupg
REQUIREMENTS

    GnuPG requires a sendmail compatibility link '/usr/sbin/sendmail'. Be
    sure that you have installed one of the following:

  - esmtp
  - masqmail
  - postfix
  - sendmail
  - msmtp
  - exim

PRE-INSTALL

POST-INSTALL

PRECAUTION
##### PKGREADME: icu
REQUIREMENTS

PRE-INSTALL

POST-INSTALL

PRECAUTION

    Note, that updating major versions of icu (in y.z changing y)
    requires rebuilding ports like: texlive, harfbuzz-icu, qtwebkit, 
    and boost, as they depend on this port.

    Have revdep(1) point out potential candidates for rebuilds after the icu
    update.

MISC
##### PKGREADME: inkscape
COMPILING:

Be sure to install librsvg before cairo else inkscape will fail to compile.
##### PKGREADME: iotop
README for iotop

REQUIREMENTS

iotop requires Linux kernel >= 2.6.20 with the TASK_DELAY_ACCT and TASK_IO_ACCOUNTING options enabled.

PRE-INSTALL

POST-INSTALL

PRECAUTION
##### PKGREADME: librsvg

README for librsvg

POST-INSTALL

	To register SVG as a loadable module for gdk-pixbuf you must run:

	# gdk-pixbuf-query-loaders --update-cache

	To do that also you can execute the post-install script.
##### PKGREADME: lxc
First, your kernel needs to be configured correctly to be able to use LXC.
Enable the following options in your kernel config:
CONFIG_NAMESPACES
CONFIG_UTS_NS
CONFIG_IPC_NS
CONFIG_PID_NS
CONFIG_USER_NS
CONFIG_NET_NS
CONFIG_CGROUPS
CONFIG_CGROUP_NS
CONFIG_CGROUP_DEVICE
CONFIG_CGROUP_SCHED
CONFIG_CGROUP_CPUACCT
CONFIG_CGROUP_FREEZER
CONFIG_CGROUP_RDMA
CONFIG_CGROUP_PIDS
CONFIG_BLK_CGROUP
CONFIG_MEMCG
CONFIG_MEMCG_SWAP
CONFIG_CPUSETS
CONFIG_VETH
CONFIG_BRIDGE
CONFIG_MACVLAN
CONFIG_VLAN_8021Q
CONFIG_NETFILTER_ADVANCED
CONFIG_NF_NAT_IPV4
CONFIG_NF_NAT_IPV6
CONFIG_IP_NF_TARGET_MASQUERADE
CONFIG_IP6_NF_TARGET_MASQUERADE
CONFIG_NETFILTER_XT_TARGET_CHECKSUM
CONFIG_NETFILTER_XT_MATCH_COMMENT
CONFIG_FUSE_FS
CONFIG_CHECKPOINT_RESTORE
CONFIG_FHANDLE
CONFIG_EVENTFD
CONFIG_EPOLL
CONFIG_UNIX_DIAG
CONFIG_INET_DIAG
CONFIG_PACKET_DIAG
CONFIG_NETLINK_DIAG

Second, you need to edit /etc/lxc/default.conf to suite your desired
container setup. The default network configuration is designed to use
the default LXC managed bridge which relies on NAT to provide access
to any external networks. Be sure to modify this if you wish to do
something different. Also, if unprivileged containers are desired,
then be sure to uncomment the uidmap configuration.

Third, you need to edit /etc/rc.conf to enable any desired LXC services.
First, the lxc-cgroups service needs to be enabled and placed before any
other LXC services for LXC to function correctly. Next, the lxc-net
service should be enabled and placed before lxc if you are wanting LXC to
manage your container networking. Last, the lxc service should be enabled
and placed after any other LXC services if you are wanting LXC to manage
the startup of your containers.

Fourth, if you are wanting to allow unprivileged users to use LXC containers,
then you will need to do some setup. First, be sure that you have enabled LXC
unprivileged containers as is documented above. Second, you need to edit
/etc/lxc/lxc-usernet and add any users that you wish to have access to LXC
unprivileged containers. The comments in the file will show how to do this.
Third, you need to run the following command to setup each user, which will
create the subuids, create the subgids, setup their BASH profile for LXC,
and create their initial LXC configuration file: lxc-users-setup
Please note that you will also need to reboot or restart the lxc-cgroups
service for the new user cgroups to be available for use. Last, if you are
wanting LXC to manage the startup of your user containers, be sure to place
the lxc-users service after lxc in the /etc/rc.conf file.

Fifth, you need to add the following line to /etc/pam.d/common-session:
session   optional    pam_cgfs.so -c all

Now you are ready to start using LXC. See below for some examples of basic
usage of LXC.

You can create a container using lxc-create:
lxc-create -t download -- alpine -d alpine -r 3.8 -a amd64

You can start this container using lxc-start:
lxc-start -n alpine

You can get a shell in this container using lxc-attach:
lxc-attach -n alpine

You can run arbitrary commands in this container using lxc-attach:
lxc-attach -n alpine -- echo Hello World!

You can stop this container using lxc-stop:
lxc-stop -n alpine

You can start LXC containers at boot by adding this line to your
container configuration:
lxc.start.auto = 1
##### PKGREADME: mysql
README for mysql 5.7.xx

REQUIREMENTS

PRE-INSTALL
   Run the included pre-install script to create a new
   user/group mysql.

POST-INSTALL
1. run 'mysql_install_db' to build the system database
   in /var/lib/mysql
2. run 'mysql_upgrade' to add new privileges and features 
   to the MySQL privilege tables if you have databases
   created with older versions of mysql
3. Set a password for the mysql root user:
   mysqladmin -u root password <mysql_root_password>

PRECAUTION 
1. With the default configuration networking support for 
   mysql is disabled, meaning the mysql daemon is accessable 
   from localhost only. 
   To add networking support comment out the 'skip-networking' 
   line in /etc/my.cnf. 
2. If you upgrade from mysql 5.6.x you must recompile the 
   other packages on your system that are linked against the 
   mysql client libraries (libmysqlclient). 
   To obtain such a list of packages for your system, you 
   may use the command 'prt-get dependent mysql' or use yapo 
   to list the packages.

##### PKGREADME: pkg-get
README for pkg-get

REQUERIMENTS

  To use pkg-repgen you'll need prt-get to be installed.

IMPORTANT

  The PKGREPO file format chaged a bit from 0.3.3,
  please regenerate your repositories with pkg-repgen

  the /etc/pkg-get.conf options slightly changed
  in version 0.3.0 in order to handle multiple
  repositories.

  pkg-get is beta software. I did not have much
  time to test it, expecially latest features
  added (locking, pre-post install scripts, printf).

##### PKGREADME: python-setuptools
NOTES:

setuptools has been renamed to python-setuptools in crux 3.3 only.

prt-get remove appdirs pyparsing six pip packaging setuptools
prt-get depinst python-setuptools

No other changes should be necessary, ports in contrib and opt affected by
this change have had there dependences changed to python-setuptools. Any third
party ports trees should update there ports to reflect this.
##### PKGREADME: vlc
NOTE:

If you are after VDPAU support be sure to (re)compile ffmpeg after installing
libvdpau, then (re)compile vlc.
